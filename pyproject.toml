[tool.poetry]
name = "home-assistant"
version = "2.18.1"
description = ""
authors = ["Will Garside <worgarside@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
wg-utilities = "^5.6.1"
watchdog = "^3.0.0"
paramiko = "^3.3.1"

[tool.poetry.group.dev.dependencies]
pre-commit = "*"
watchdog = "^3.0.0"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core",
]

[tool.black]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
add_imports = ["from __future__ import annotations"]
profile = "black"

[tool.mypy]
exclude = ["_local_sandbox"]
follow_imports = "normal"
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true

warn_return_any = true
warn_unused_ignores = true
warn_unused_configs = true
warn_redundant_casts = true

no_implicit_optional = true
strict_optional = true

strict_equality = true
show_error_codes = true

[tool.codespell]
ignore-words-list = "hass"
skip = '*.json,*.csv,*.xml,*.lock'

[tool.pycln]
path = "*"
expand_stars = true
all = true
no_gitignore = false

[tool.ruff]
line-length = 120
select = [
  # https://docs.astral.sh/ruff/rules/
  "A",   # https://docs.astral.sh/ruff/rules/#flake8-builtins-a
  "ARG", # https://docs.astral.sh/ruff/rules/#flake8-unused-arguments-arg
  "B",   # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
  "C4",  # https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
  "COM", # https://docs.astral.sh/ruff/rules/#flake8-commas-com
  "D",   # https://docs.astral.sh/ruff/rules/#pydocstyle-d
  "E",   # https://docs.astral.sh/ruff/rules/#error-e
  "ERA", # https://docs.astral.sh/ruff/rules/#eradicate-era
  "F",   # https://docs.astral.sh/ruff/rules/#pyflakes-f
  "FA",  # https://docs.astral.sh/ruff/rules/#flake8-future-annotations-fa
  "FBT", # https://docs.astral.sh/ruff/rules/#flake8-boolean-trap-fbt
  "G",   # https://docs.astral.sh/ruff/rules/#flake8-logging-format-g
  "I",   # https://docs.astral.sh/ruff/rules/#isort-i
  "ICN", # https://docs.astral.sh/ruff/rules/#flake8-import-conventions-icn
  "N",   # https://docs.astral.sh/ruff/rules/#pep8-naming-n
  "PGH", # https://docs.astral.sh/ruff/rules/#pygrep-hooks-pgh
  "PIE", # https://docs.astral.sh/ruff/rules/#flake8-pie-pie
  "PL",  # https://docs.astral.sh/ruff/rules/#pylint-pl
  "PT",  # https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
  "PTH", # https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
  "Q",   # https://docs.astral.sh/ruff/rules/#flake8-quotes-q
  "RET", # https://docs.astral.sh/ruff/rules/#flake8-return-ret
  "RSE", # https://docs.astral.sh/ruff/rules/#flake8-raise-rse
  "RUF", # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
  "S",   # https://docs.astral.sh/ruff/rules/#flake8-bandit-s
  "SIM", # https://docs.astral.sh/ruff/rules/#flake8-simplify-sim
  "TRY", # https://docs.astral.sh/ruff/rules/#tryceratops-try
  "UP",  # https://docs.astral.sh/ruff/rules/#pyupgrade-up
  "W",   # https://docs.astral.sh/ruff/rules/#warning-w
]
exclude = ["custom_zha_quirks/*", "custom_components/*"]
ignore = []

[tool.ruff.per-file-ignores]
"__init__.py" = ["D104"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.pylint]
max-args = 10
