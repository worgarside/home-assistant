---
name: Manage PR Labels

# yamllint disable-line rule:truthy
on:
  pull_request:
    types:
      - labeled
      - unlabeled
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review
      - auto_merge_enabled
      - auto_merge_disabled

concurrency:
  # yamllint disable-line rule:line-length
  group: manage-labels-${{ github.event.pull_request.number }}-${{ github.event.action }}
  cancel-in-progress: true

jobs:
  set_labels:
    name: Set Non-Release Labels
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: srvaroa/labeler@v1.6.0
        env:
          GITHUB_TOKEN: ${{ secrets.WORGARSIDE_DEV_TOKEN || secrets.GITHUB_TOKEN }}

  set_release_label:
    name: Set Release Label
    runs-on: ubuntu-latest
    # This dependency is just to ensure that the jobs don't interfere with each other
    needs: set_labels
    if: ${{ github.base_ref == 'main' && startsWith(github.head_ref, 'release/') }}
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Clone Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Previous Tag
        id: get-previous-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          fallback: 0.0.0

      - name: Derive Label
        id: derive-label
        # yamllint disable rule:line-length
        run: |
          new_release_number=$(echo $GITHUB_HEAD_REF | cut -d '/' -f2)
          latest_release=${{ steps.get-previous-tag.outputs.tag }}

          if ! [[ $new_release_number =~ ^[0-9]{1,2}\.[0-9]{1,4}\.[0-9]{1,4}$ ]]
          then
              echo "Release number is invalid: \`$new_release_number\`" >> $GITHUB_STEP_SUMMARY
              exit 1
          else
            echo "new-release-number=$new_release_number" >> $GITHUB_OUTPUT
            echo "latest-release=$latest_release" >> $GITHUB_OUTPUT
          fi

          if [ "${new_release_number%%.*}" != "${latest_release%%.*}" ]
          then
              echo "release-label=major" >> $GITHUB_OUTPUT
          elif [ $( cut -d '.' -f2 <<< $new_release_number) != $( cut -d '.' -f2 <<< $latest_release ) ]
          then
            echo "release-label=minor" >> $GITHUB_OUTPUT
          elif [ "${new_release_number##*.}" != "${latest_release##*.}" ]
          then
            echo "release-label=patch" >> $GITHUB_OUTPUT
          else
              echo "new_release_number is \`$new_release_number\`" >> $GITHUB_STEP_SUMMARY
              echo "latest_release is \`$latest_release\`" >> $GITHUB_STEP_SUMMARY
              exit 1
          fi
        # yamllint enable rule:line-length

      - name: Apply Label
        run: |
          gh pr edit ${{ github.event.pull_request.number }} \
            --add-label "${{ steps.derive-label.outputs.release-label}},release"
        env:
          GITHUB_TOKEN: ${{ secrets.WORGARSIDE_DEV_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Summarise
        # yamllint disable rule:line-length
        run: |
          echo "# :label: Release Label Info" >> $GITHUB_STEP_SUMMARY
          echo "Release Number (derived from branch): \`${{ steps.derive-label.outputs.new-release-number }}\`" >> $GITHUB_STEP_SUMMARY
          echo "Previous Release (latest tag):  \`${{ steps.derive-label.outputs.latest-release }}\`" >> $GITHUB_STEP_SUMMARY
          echo "Release label is \`${{ steps.derive-label.outputs.release-label }}\`" >> $GITHUB_STEP_SUMMARY
        # yamllint enable rule:line-length

  validate-semver-label:
    name: Validate SemVer Label
    runs-on: ubuntu-latest
    needs: set_labels
    if: ${{ github.base_ref != 'main' || !startsWith(github.head_ref, 'release/') }}
    steps:
      - name: Validate SemVer Label
        uses: yogevbd/enforce-label-action@2.2.2
        with:
          # yamllint disable-line rule:line-length
          REQUIRED_LABELS_ANY: bug,dependencies,hotfix,major,minor,non-functional,patch,sync

  edit-keep-updated-label:
    name: Edit `keep-updated` label
    if: |
      startsWith(github.event.action, 'auto_merge_') &&
      !startsWith(github.head_ref, 'release/')
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Clone Repo
        uses: actions/checkout@v3

      - name: |
          ${{
            github.event.action == 'auto_merge_enabled' && 'Add' ||
            'Remove'
          }} label
        run: |
          gh pr edit ${{ github.event.pull_request.number }} \
            --${{
              github.event.action == 'auto_merge_enabled' && 'add' || 'remove'
            }}-label "bot:keep-updated" || :
        env:
          GITHUB_TOKEN: ${{ secrets.WORGARSIDE_DEV_TOKEN || secrets.GITHUB_TOKEN }}
