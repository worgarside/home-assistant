---

## <editor-fold desc="Media Player Active State">
#
#  - binary_sensor:
#      - name: All Speakers Active
#        state: "{{ states('media_player.all_speakers') in [ 'playing', 'paused' ] }}"
#
#  - binary_sensor:
#      - name: Downstairs Speakers Active
#        state: >
#          {{ states('media_player.downstairs_speakers') in [ 'playing', 'paused' ] }}
#
#  - binary_sensor:
#      - name: HiFi System Active
#        state: "{{ states('media_player.hifi_system') in [ 'playing', 'paused' ] }}"
#
#  - binary_sensor:
#      - name: Kitchen Nest Mini Active
#        state: >
#          {{ states('media_player.kitchen_nest_mini') in [ 'playing', 'paused' ] }}
#
#  - binary_sensor:
#      - name: Lounge TV Active
#        state: >
#          {{
#            states('media_player.lounge_bravia_tv') in [ 'playing', 'paused' ] or
#            states('media_player.lounge_tv') in [ 'playing', 'paused' ]
#          }}
#
#  - binary_sensor:
#      - name: Lounge Nest Mini Active
#        state: >
#          {{ states('media_player.lounge_nest_mini') in [ 'playing', 'paused' ] }}
#
#  - binary_sensor:
#      - name: Matt's Room Nest Mini Active
#        state: >
#          {{ states('media_player.matts_room_nest_mini') in [ 'playing', 'paused' ] }}
#
#  - binary_sensor:
#      - name: Tom's Speakers Active
#        state: "{{ states('media_player.tom_s_speakers') in [ 'playing', 'paused' ] }}"
#
#  - binary_sensor:
#      - name: Upstairs Speakers Active
#        state: >
#          {{ states('media_player.upstairs_speakers') in [ 'playing', 'paused' ] }}
#
#  - binary_sensor:
#      - name: Will's YAS-209 Active
#        state: "{{ states('media_player.will_s_yas_209') in [ 'playing', 'paused' ] }}"
#
#  - binary_sensor:
#      - name: Will's Bedroom Home Hub Active
#        state: >
#          {{ states('media_player.wills_bedroom_home_hub') in [ 'playing', 'paused' ] }}
#
#  - binary_sensor:
#      - name: Will's TV Active
#        state: >
#          {{
#            states('media_player.will_s_bravia_tv') in [ 'playing', 'paused' ] or
#            states('media_player.wills_tv') in [ 'playing', 'paused' ]
#          }}
#
#  - binary_sensor:
#      - name: Will's Room Chromecast Active
#        state: >
#          {{ states('media_player.wills_room_chromecast') in [ 'playing', 'paused' ] }}
#
## </editor-fold>
# <editor-fold desc="Will's Room Curtain">

  - binary_sensor:
      - name: Will's Room Curtain Closed
        state: >
          {{
            int(states('sensor.will_s_room_curtain_position')) <
            ( 17.5 if is_state('binary_sensor.will_s_balcony_door', 'on') else 5 )
          }}

  - binary_sensor:
      - name: Will's Room Curtain Open
        state: "{{ int(states('sensor.will_s_room_curtain_position')) > 95  }}"

# </editor-fold>
# <editor-fold desc="Spotify Now Playing Attributes">

  - sensor:
      - name: Spotify Matt Scott Media Album Name
        state: >
          {{ state_attr('media_player.spotify_matt_scott', 'media_album_name') }}

  - sensor:
      - name: Spotify Matt Scott Media Album Artwork Internal URL
        state: "{{ state_attr('media_player.spotify_matt_scott', 'entity_picture') }}"

  - sensor:
      - name: Spotify Matt Scott Media Artist
        state: "{{ state_attr('media_player.spotify_matt_scott', 'media_artist') }}"

  - sensor:
      - name: Spotify Matt Scott Media Title
        state: "{{ state_attr('media_player.spotify_matt_scott', 'media_title') }}"

  - sensor:
      - name: Spotify Tom Jones Media Album Name
        state: >
          {{ state_attr('media_player.spotify_tom_jones', 'media_album_name') }}

  - sensor:
      - name: Spotify Tom Jones Media Album Artwork Internal URL
        state: "{{ state_attr('media_player.spotify_tom_jones', 'entity_picture') }}"

  - sensor:
      - name: Spotify Tom Jones Media Artist
        state: "{{ state_attr('media_player.spotify_tom_jones', 'media_artist') }}"

  - sensor:
      - name: Spotify Tom Jones Media Title
        state: "{{ state_attr('media_player.spotify_tom_jones', 'media_title') }}"

  - sensor:
      - name: Spotify Will Garside Media Album Name
        state: >
          {{ state_attr('media_player.spotify_will_garside', 'media_album_name') }}

  - sensor:
      - name: Spotify Will Garside Media Album Artwork Internal URL
        state: "{{ state_attr('media_player.spotify_will_garside', 'entity_picture') }}"

  - sensor:
      - name: Spotify Will Garside Media Artist
        state: "{{ state_attr('media_player.spotify_will_garside', 'media_artist') }}"

  - sensor:
      - name: Spotify Will Garside Media Title
        state: "{{ state_attr('media_player.spotify_will_garside', 'media_title') }}"

# </editor-fold>
# <editor-fold desc="Sun Attributes">

  - sensor:
      - name: Sun Elevation
        state: "{{ state_attr('sun.sun', 'elevation') }}"
        unit_of_measurement: Â°

  - sensor:
      - name: Sun Next Dawn
        state: "{{ state_attr('sun.sun', 'next_dawn') }}"

  - sensor:
      - name: Sun Next Dusk
        state: "{{ state_attr('sun.sun', 'next_dusk') }}"

# </editor-fold>
# <editor-fold desc="London Air Quality Card Conditions">

  - binary_sensor:
      - name: London Air Low Active
        state: >
          {{
            "Low" in [
              states("sensor.barking_and_dagenham"),
              states("sensor.bexley"),
              states("sensor.brent"),
              states("sensor.camden"),
              states("sensor.city_of_london"),
              states("sensor.croydon"),
              states("sensor.ealing"),
              states("sensor.enfield"),
              states("sensor.greenwich"),
              states("sensor.hackney"),
              states("sensor.haringey"),
              states("sensor.harrow"),
              states("sensor.havering"),
              states("sensor.hillingdon"),
              states("sensor.islington"),
              states("sensor.kensington_and_chelsea"),
              states("sensor.kingston"),
              states("sensor.lambeth"),
              states("sensor.lewisham"),
              states("sensor.merton"),
              states("sensor.redbridge"),
              states("sensor.richmond"),
              states("sensor.southwark"),
              states("sensor.sutton"),
              states("sensor.tower_hamlets"),
              states("sensor.wandsworth"),
              states("sensor.westminster")
            ]
          }}

  - binary_sensor:
      - name: London Air Moderate Active
        state: >
          {{
            "Moderate" in [
              states("sensor.barking_and_dagenham"),
              states("sensor.bexley"),
              states("sensor.brent"),
              states("sensor.camden"),
              states("sensor.city_of_london"),
              states("sensor.croydon"),
              states("sensor.ealing"),
              states("sensor.enfield"),
              states("sensor.greenwich"),
              states("sensor.hackney"),
              states("sensor.haringey"),
              states("sensor.harrow"),
              states("sensor.havering"),
              states("sensor.hillingdon"),
              states("sensor.islington"),
              states("sensor.kensington_and_chelsea"),
              states("sensor.kingston"),
              states("sensor.lambeth"),
              states("sensor.lewisham"),
              states("sensor.merton"),
              states("sensor.redbridge"),
              states("sensor.richmond"),
              states("sensor.southwark"),
              states("sensor.sutton"),
              states("sensor.tower_hamlets"),
              states("sensor.wandsworth"),
              states("sensor.westminster")
            ]
          }}

  - binary_sensor:
      - name: London Air High Active
        state: >
          {{
            "High" in [
              states("sensor.barking_and_dagenham"),
              states("sensor.bexley"),
              states("sensor.brent"),
              states("sensor.camden"),
              states("sensor.city_of_london"),
              states("sensor.croydon"),
              states("sensor.ealing"),
              states("sensor.enfield"),
              states("sensor.greenwich"),
              states("sensor.hackney"),
              states("sensor.haringey"),
              states("sensor.harrow"),
              states("sensor.havering"),
              states("sensor.hillingdon"),
              states("sensor.islington"),
              states("sensor.kensington_and_chelsea"),
              states("sensor.kingston"),
              states("sensor.lambeth"),
              states("sensor.lewisham"),
              states("sensor.merton"),
              states("sensor.redbridge"),
              states("sensor.richmond"),
              states("sensor.southwark"),
              states("sensor.sutton"),
              states("sensor.tower_hamlets"),
              states("sensor.wandsworth"),
              states("sensor.westminster")
            ]
          }}

  - binary_sensor:
      - name: London Air Very High Active
        state: >
          {{
            "Very High" in [
              states("sensor.barking_and_dagenham"),
              states("sensor.bexley"),
              states("sensor.brent"),
              states("sensor.camden"),
              states("sensor.city_of_london"),
              states("sensor.croydon"),
              states("sensor.ealing"),
              states("sensor.enfield"),
              states("sensor.greenwich"),
              states("sensor.hackney"),
              states("sensor.haringey"),
              states("sensor.harrow"),
              states("sensor.havering"),
              states("sensor.hillingdon"),
              states("sensor.islington"),
              states("sensor.kensington_and_chelsea"),
              states("sensor.kingston"),
              states("sensor.lambeth"),
              states("sensor.lewisham"),
              states("sensor.merton"),
              states("sensor.redbridge"),
              states("sensor.richmond"),
              states("sensor.southwark"),
              states("sensor.sutton"),
              states("sensor.tower_hamlets"),
              states("sensor.wandsworth"),
              states("sensor.westminster")
            ]
          }}


# </editor-fold>
# <editor-fold desc="Times">

  - binary_sensor:
      - name: Quiet Hours
        state: >
          {%- if now().isoweekday() in range(1, 6) %}
            {{ not 7 < now().hour < 22 }}
          {%- else %}
            {{ now().hour < 8 }}
          {%- endif %}

# </editor-fold>
# <editor-fold desc="Fixed Values">

  - sensor:
      - name: Fixed Value On
        state: On

  - sensor:
      - name: Fixed Value Off
        state: Off

# </editor-fold>
# <editor-fold desc="Washing Machine">

  - binary_sensor:
      - name: Washing Machine
        state: >
          {{ states('sensor.washing_machine_current_consumption') | float > 2.5 }}
        icon: >
          {%- if is_state("binary_sensor.washing_machine", "on") %}
            mdi:washing-machine
          {%- else %}
            mdi:washing-machine-off
          {%- endif %}

# </editor-fold>
# <editor-fold desc="YAS-209">

  - trigger:
      - platform: webhook
        webhook_id: wills_yas_209_bridge_input
    sensor:
      - name: Will's YAS-209 Bridge Input
        unique_id: wills_yas_209_bridge_input
        icon: mdi:soundbar
        state: '{{ trigger.json.state }}'
        picture: '{{ trigger.json.album_art_uri }}'
        attributes:
          volume_level: '{{ float(trigger.json.volume_level, None) }}'
          is_volume_muted: '{{ float(trigger.json.volume_level, None) == 0 }}'
          # media_content_id: ""
          # media_content_type: ""
          media_duration: '{{ trigger.json.media_duration }}'
          media_title: '{{ trigger.json.media_title }}'
          media_artist: '{{ trigger.json.media_artist }}'
          media_album_name: '{{ trigger.json.media_album_name }}'
          friendly_name: Will's YAS-209 Bridge Input
          album_art_uri: '{{ trigger.json.album_art_uri }}'
          payload: '{{ trigger.json }}'
          last_updated: '{{ now() }}'

# </editor-fold>
# <editor-fold desc="System">

  - sensor:
      - name: Count Automations
        state: '{{ states.automation | list | length }}'
        icon: mdi:robot-angry
        unit_of_measurement: ''

  - sensor:
      - name: Count Scripts
        state: '{{ states.script| list | length }}'
        icon: mdi:script-text
        unit_of_measurement: ''

  - sensor:
      - name: Count Device Trackers
        state: '{{ states.device_tracker | list | length }}'
        icon: mdi:devices
        unit_of_measurement: ''

  - sensor:
      - name: Count Binary Sensors
        state: '{{ states.binary_sensor| list | length }}'
        icon: mdi:electric-switch
        unit_of_measurement: ''

  - sensor:
      - name: Count Sensors
        state: '{{ states.sensor | list | length }}'
        icon: mdi:counter
        unit_of_measurement: ''

  - sensor:
      - name: Count Switches
        state: '{{ states.switch | list | length }}'
        icon: mdi:toggle-switch
        unit_of_measurement: ''

  - sensor:
      - name: Count Zones
        state: '{{ states.zone | list | length }}'
        icon: mdi:map-marker-multiple
        unit_of_measurement: ''

  - sensor:
      - name: Count Input Booleans
        state: '{{ states.input_boolean | list | length }}'
        icon: mdi:toggle-switch-outline
        unit_of_measurement: ''

  - sensor:
      - name: Count Input Numbers
        state: '{{ states.input_number | list | length }}'
        icon: mdi:numeric-1-box-multiple-outline
        unit_of_measurement: ''

  - sensor:
      - name: Count Input Texts
        state: '{{ states.input_text | list | length }}'
        icon: mdi:form-textbox
        unit_of_measurement: ''

  - sensor:
      - name: Count Input Selects
        state: '{{ states.input_select | list | length }}'
        icon: mdi:form-dropdown
        unit_of_measurement: ''

  - sensor:
      - name: Count Input Datetimes
        state: '{{ states.input_datetime | list | length }}'
        icon: mdi:calendar-edit
        unit_of_measurement: ''

  - sensor:
      - name: Database Record Count
        state: >
          {% set ns = namespace(total = 0) -%}
          {%- for state in states.sensor %}
              {%- if state.entity_id.endswith('_table_record_count') %}
                  {%- set ns.total = ns.total + (state.state|int) %}
              {%- endif %}
          {%- endfor %}

          {{ ns.total }}
        icon: mdi:table-large
        unit_of_measurement: Records


# </editor-fold>

  - sensor:
      - name: Vic and Will Distance
        unit_of_measurement: miles
        state: >
          {%- set p = pi/180 %}
          {%- set lat1 = state_attr('person.vic', 'latitude') %}
          {%- set lon1 = state_attr('person.vic', 'longitude') %}
          {%- set lat2 = state_attr('person.will', 'latitude') %}
          {%- set lon2 = state_attr('person.will', 'longitude') %}

          {{
            (
              7917.5 * asin(
                sqrt(
                  (0.5 - cos((lat2 - lat1) * p) / 2 ) +
                  (
                    cos(lat1 * p) *
                    cos(lat2 * p) *
                    ( 1 - cos((lon2 - lon1) * p) ) *
                    0.5
                  )
                )
              )
            ) |
            round(2)
          }}
        icon: mdi:map-marker-distance
