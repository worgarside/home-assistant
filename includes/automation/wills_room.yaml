---

# ------------------------ Will's Room ------------------------ #

  - alias: /door/wills_room/open_while_will_away
    id: wills_room_door_opened_whilst_will_away
    trigger:
      platform: state
      entity_id: binary_sensor.will_s_bedroom_door
      to: "on"
    condition: "{{ states('person.will') != 'home' }}"
    action:
      - service: notify.mobile_app_will_s_pixel_6_pro
        data:
          message: Bedroom door has been opened
          title: Security Alert!
      - service: light.turn_on
        data:
          entity_id: light.wills_shapes
          brightness_pct: 100
          effect: Cops
      - service: media_player.volume_set
        target:
          entity_id: media_player.wills_bedroom_home_hub
        data:
          volume_level: 1
      - service: media_extractor.play_media
        target:
          entity_id: media_player.wills_bedroom_home_hub
        data:
          media_content_type: VIDEO
          media_content_id: https://www.youtube.com/watch?v=Zd68AthoNIw

  - alias: /door/wills_room/door_open_internal_alert
    id: wills_room_door_opened_internal_alert
    trigger:
      platform: state
      entity_id: binary_sensor.will_s_bedroom_door
      to: "on"
    action:
      - alias: Set variables
        variables:
          original_state: "{{ states('light.wills_shapes') }}"
          original_effect: "{{ state_attr('light.wills_shapes', 'effect') }}"
          original_brightness: "{{ state_attr('light.wills_shapes', 'brightness') }}"
      - service: light.turn_on
        data:
          entity_id: light.wills_shapes
          brightness: 255
          effect: Cops
      - wait_template: "{{ is_state('binary_sensor.will_s_bedroom_door', 'off') }}"
      - choose:
          - alias: Shapes were ON
            conditions: "{{ original_state == 'on' }}"
            sequence:
              - service: light.turn_on
                data:
                  entity_id: light.wills_shapes
                  effect: '{{ original_effect }}'
                  brightness: '{{ original_brightness }}'
          - alias: Shapes were OFF
            conditions: "{{ original_state == 'off' }}"
            sequence:
              - service: light.turn_off
                data:
                  entity_id: light.wills_shapes

  - alias: /door/wills_room/closet_door_auto_light
    id: wills_room_closet_door_auto_light
    trigger:
      platform: state
      entity_id: binary_sensor.will_s_closet_door
      to: "on"
    action:
      - service: light.turn_on
        data:
          entity_id: light.will_s_closet
          brightness_pct: >
            {{
              50
              if states('binary_sensor.quiet_hours') == 'on'
              else 100
            }}
      - wait_template: >
          {{ states('binary_sensor.will_s_closet_door') == 'off' }}
        timeout: 900
        continue_on_timeout: true
      - service: light.turn_off
        data:
          entity_id: light.will_s_closet

  - alias: /plant/saturation_low
    id: plant_saturation_low
    mode: parallel
    trigger:
      platform: state
      entity_id:
        - sensor.monstera_saturation
        - sensor.ficus_saturation
        - sensor.pineapple_saturation
    # Adding condition to minimise "false positive" triggers       -
    condition: >
      {{
        trigger.to_state.state | float  <
        max(
          states('input_number.monstera_water_threshold'),
          states('input_number.ficus_water_threshold'),
          states('input_number.pineapple_water_threshold'),
        ) | float
      }}
    action:
      - variables:
          plant_name: "{{ trigger.entity_id.split('.')[-1].split('_')[0].lower() }}"
          input_number: input_number.{{ plant_name }}_water_threshold
      - if:
          - >
            {{
              trigger.to_state.state | float  <
              states(input_number) | float
            }}
        then:
          - service: input_button.press
            target:
              entity_id: input_button.water_{{ plant_name }}
