---

# Will's MacBook Pro

  - alias: /switch/will_s_macbook_pro/turn_on/docked
    id: will_s_macbook_pro_docked
    trigger:
      - platform: state
        entity_id: binary_sensor.will_s_macbook_pro_docked
        to: "on"
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.st_macbook_pro
      - condition: "{{ states('sensor.wills_macbook_pro_internal_battery_level') | int < 25 }}"
      - service: switch.turn_on
        data:
          entity_id: switch.will_s_macbook_pro

  - alias: /switch/will_s_macbook_pro/turn_on/battery_low
    id: will_s_macbook_pro_battery_low
    trigger:
      - platform: numeric_state
        entity_id: sensor.wills_macbook_pro_internal_battery_level
        below: 25
    condition: "{{ states('binary_sensor.will_s_macbook_pro_docked') == 'on' }}"
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.will_s_macbook_pro

  - alias: /switch/will_s_macbook_pro/turn_off/undocked
    id: will_s_macbook_pro_undocked
    trigger:
      - platform: state
        entity_id: binary_sensor.will_s_macbook_pro_docked
        to: "off"
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.will_s_macbook_pro

  - alias: /switch/will_s_macbook_pro/turn_off/battery_full
    id: will_s_macbook_pro_battery_full
    trigger:
      - platform: numeric_state
        entity_id: sensor.wills_macbook_pro_internal_battery_level
        above: 95
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.will_s_macbook_pro

# Work MacBook Pro

  - alias: /switch/st_macbook_pro/turn_on/docked
    id: st_macbook_pro_docked
    trigger:
      - platform: state
        entity_id: binary_sensor.st_macbook_pro_docked
        to: "on"
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.will_s_macbook_pro
      - condition: "{{ states('sensor.st_macbook_pro_internal_battery_level') | int < 25 }}"
      - service: switch.turn_on
        data:
          entity_id: switch.st_macbook_pro

  - alias: /switch/st_macbook_pro/turn_on/battery_low
    id: st_macbook_pro_battery_low
    trigger:
      - platform: numeric_state
        entity_id: sensor.st_macbook_pro_internal_battery_level
        below: 25
    condition: "{{ states('binary_sensor.st_macbook_pro_docked') == 'on' }}"
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.st_macbook_pro

  - alias: /switch/st_macbook_pro/turn_off/undocked
    id: st_macbook_pro_undocked
    trigger:
      - platform: state
        entity_id: binary_sensor.st_macbook_pro_docked
        to: "off"
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.st_macbook_pro

  - alias: /switch/st_macbook_pro/turn_off/battery_full
    id: st_macbook_pro_battery_full
    trigger:
      - platform: numeric_state
        entity_id: sensor.st_macbook_pro_internal_battery_level
        above: 95
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.st_macbook_pro

# Lounge TV

  - alias: /media_player/lounge_bravia_tv/limit_volume
    id: limit_media_player_lounge_bravia_tv_volume
    trigger:
      - platform: numeric_state
        entity_id: media_player.lounge_bravia_tv
        attribute: volume_level
        above: 0.6
        for:
          seconds: 2
    action:
      - service: media_player.volume_set
        data:
          volume_level: 0.6
        target:
          entity_id: media_player.lounge_bravia_tv

# Office Desk

  - alias: /cover/office_desk/work_mode
    id: office_desk_work_mode
    trigger:
      - platform: time_pattern
        minutes: 58
    condition:
      - alias: "If standing target has not been met"
        condition: numeric_state
        entity_id: sensor.office_desk_standing_mode_percentage
        below: input_number.office_desk_standing_mode_percentage_target
    action:
      - alias: "Send debug notification"
        service: script.debug_persistent_notification
        data:
          title: "Work Mode: Standing Target Not Met \U0001F621"
          message: >
            {{ states('office_desk_standing_time_remaining') }} minutes remaining...
      - alias: "Wait for desk to be occupied"
        wait_template: "{{ states('binary_sensor.office_desk_occupied') == 'on' }}"
        timeout: 3480 # Gives a 2 minute buffer before the next trigger
        continue_on_timeout: false
      - alias: "Delay 30 seconds in case I'm still plugging stuff in"
        delay: 00:00:30
      - alias: "Set desk to standing mode"
        service: script.office_desk_standing_mode
