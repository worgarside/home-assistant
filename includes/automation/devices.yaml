---

# MacBook Pro

  - alias: /switch/will_s_macbook_pro/turn_charger_on
    id: turn_will_s_macbook_pro_charger_on
    trigger:
      - platform: numeric_state
        entity_id: var.will_s_macbook_pro_battery_percentage
        below: 25
    action:
      - service: switch.turn_on
        data:
          entity_id: switch.will_s_macbook

  - alias: /switch/will_s_macbook_pro/turn_charger_off
    id: turn_will_s_macbook_pro_charger_off
    trigger:
      - platform: numeric_state
        entity_id: var.will_s_macbook_pro_battery_percentage
        above: 95
    action:
      - service: switch.turn_off
        data:
          entity_id: switch.will_s_macbook

# HiFi Amp

  - alias: /switch/hifi_amp/auto_on
    id: auto_on_hifi_amp
    trigger:
      - platform: state
        entity_id:
          - media_player.hifi_system
          - media_player.lounge_bravia_tv
        from:
          - idle
          - "off"
          - unavailable
          - unknown
        to:
          - idle
          - paused
          - playing
    action:
      - service: switch.turn_on
        entity_id: switch.hifi_amp

  - alias: /switch/hifi_amp/auto_off
    id: auto_off_hifi_amp
    trigger:
      - platform: state
        entity_id:
          - media_player.hifi_system
          - media_player.lounge_bravia_tv
        to:
          - "off"
        for:
          minutes: 1
    condition:
      - condition: and
        conditions:
          - condition: state
            entity_id: media_player.hifi_system
            state: "off"
          - condition: state
            entity_id: media_player.lounge_bravia_tv
            state: "off"
    action:
      # yamllint disable-line rule:line-length
      - wait_template: "{{ states('media_player.hifi_system') == 'off' and states('media_player.lounge_bravia_tv') == 'off'  and states('media_player.lounge_tv') != 'unavailable' }}"
        timeout: 300
        continue_on_timeout: false
      - service: switch.turn_off
        entity_id: switch.hifi_amp

# Tower Fan

  # This allows an easy way of manually overriding the auto-control automation, without
  # having to remember to turn it off and on: if either manual input is updated then
  # the actual tower fan state is compared to what it should be according to the auto-
  # controller; if they match then the auto-control is turned on; if they don't then
  # it's turned off
  - alias: /switch/tower_fan/manually_controlled
    id: tower_fan_manually_controlled
    trigger:
      - platform: state
        entity_id:
          - switch.tower_fan
          - input_number.wills_room_fan_auto_on_threshold
    action:
      - alias: Set variables
        variables:
          tower_fan_should_be_on: |
            {{
              is_state('person.will', 'home') and
              states('sensor.wills_room_hue_motion_sensor_temperature')
              >=
              states('input_number.wills_room_fan_auto_on_threshold')
            }}
          tower_fan_is_on: "{{ states('switch.tower_fan') == 'on' }}"
      - choose:
          - alias: Should be <state> and is - i.e. auto control on
            conditions: '{{ tower_fan_should_be_on == tower_fan_is_on }}'
            sequence:
              - service: automation.turn_on
                target:
                  entity_id: automation.switch_tower_fan_auto_control
          - alias: Should be <state> but isn't - i.e. manual override
            conditions: '{{ tower_fan_should_be_on != tower_fan_is_on }}'
            sequence:
              - service: automation.turn_off
                target:
                  entity_id: automation.switch_tower_fan_auto_control

  - alias: /switch/tower_fan/auto_control
    id: tower_fan_auto_control
    trigger:
      - platform: state
        entity_id:
          - sensor.wills_room_hue_motion_sensor_temperature
          - input_number.wills_room_fan_auto_on_threshold
    action:
      - choose:
          - alias: Low Temperature
            conditions: |
              {{
                states('sensor.wills_room_hue_motion_sensor_temperature')
                <
                states('input_number.wills_room_fan_auto_on_threshold')
              }}
            sequence:
              - service: switch.turn_off
                entity_id: switch.tower_fan
          - alias: High Temperature and Will's Home
            conditions: |
              {{
                is_state('person.will', 'home') and
                states('sensor.wills_room_hue_motion_sensor_temperature')
                >=
                states('input_number.wills_room_fan_auto_on_threshold')
              }}
            sequence:
              - service: switch.turn_on
                entity_id: switch.tower_fan

# Lounge TV

  - alias: /media_player/lounge_bravia_tv/limit_volume
    id: limit_media_player_lounge_bravia_tv_volume
    trigger:
      - platform: numeric_state
        entity_id: media_player.lounge_bravia_tv
        attribute: volume_level
        above: 0.6
        for:
          seconds: 2
    action:
      - service: media_player.volume_set
        data:
          volume_level: 0.6
        target:
          entity_id: media_player.lounge_bravia_tv
