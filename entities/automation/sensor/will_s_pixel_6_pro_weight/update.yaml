---
alias: /sensor/will-s-pixel-6-pro-weight/update

id: sensor_will_s_pixel_6_pro_weight_update

description: Submit weight entry to wger when weight sensor updates

mode: single

trigger:
  - platform: state
    entity_id: sensor.will_s_pixel_6_pro_weight
    not_to:
      - "unknown"
      - "unavailable"

variables:
  date: "{{ today_at(0).strftime('%Y-%m-%d') }}"
  weight: "{{ states('sensor.will_s_pixel_6_pro_weight') | float(0) | round(2) }}"

action:
  - action: rest_command.post_weightentry
    data:
      date: "{{ date }}"
      weight: "{{ weight }}"
    response_variable: post_res

  - choose:
      - alias: Success
        conditions: "{{ 200 <= post_res.status < 300 }}"
        sequence:
          - action: homeassistant.update_entity
            data:
              entity_id: sensor.wger_will_body_weight

      - alias: Failed; duplicate entry
        conditions: >-
          {{
            post_res.status == 400 and
            "The fields date, user must make a unique set." in post_res | string
          }}
        sequence:
          - alias: Get previous entry
            action: rest_command.get_weightentry
            data:
              date: "{{ date }}"
              limit: 1
            response_variable: get_res

          - variables:
              previous_entry_id: >-
                {{ (get_res.content.get("results", [])[0] | default({"id": none})).id }}

          - if: "{{ previous_entry_id is defined and previous_entry_id is not none }}"

            then:
              - alias: Update previous entry
                action: rest_command.put_weightentry
                data:
                  id: "{{ previous_entry_id }}"
                  date: "{{ date }}"
                  weight: "{{ weight }}"
                response_variable: put_res

    default:
      - action: script.log_exception
        data:
          calling_entity: automation.sensor_will_s_pixel_6_pro_weight_update
          message: |
            Got status `{{ post_res.status }}` from wger API via `rest_command.post_weightentry`

            {%- set content = post_res.content %}
            {%- if content is match('^\\s*[\\[\\{]') %}
            ```json
            {{ content | tojson(indent=2) }}
            ```
            {%- else %}
            {{ content }}
            {%- endif %}
