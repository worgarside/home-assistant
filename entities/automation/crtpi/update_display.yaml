---
alias: /crtpi/update-display

id: crtpi_update_display

mode: queued

trigger:
  - platform: state
    entity_id:
      - media_player.hifi_system
      - media_player.spotify_vic
      - media_player.spotify_will
      - media_player.topaz_sr10

variables:
  media_player: "{{ states('input_select.crtpi_media_player_source') }}"

  artwork_uri: >-
    {% set url = trigger.to_state.attributes.entity_picture | default(None) %}
    {%
      set host = (
        states('sensor.local_ip')
        if has_value('sensor.local_ip')
        else "homeassistant.local"
      )
    %}
    {{
      "http://" ~ host ~ ":8123" ~ url
      if url is string and url.startswith("/api/")
      else url
    }}

condition: >-
  {% set from_attrs = trigger.from_state.attributes %}
  {% set to_attrs = trigger.to_state.attributes %}
  {{
    media_player == trigger.entity_id and (
      trigger.from_state.state != trigger.to_state.state or
      from_attrs.get("media_title") != to_attrs.get("media_title") or
      from_attrs.get("media_album_name") != to_attrs.get("media_album_name") or
      from_attrs.get("media_artist") != to_attrs.get("media_artist") or
      from_attrs.get("entity_picture") != to_attrs.get("entity_picture")
    )
  }}

action:
  - service: mqtt.publish
    data:
      topic: /crtpi/crt-interface/content
      qos: 1
      retain: true
      payload: >-
        {{
          {
            "title": trigger.to_state.attributes.media_title,
            "artist": trigger.to_state.attributes.media_artist,
            "album": trigger.to_state.attributes.media_album_name,
            "album_artwork_url": artwork_uri,
            "state": trigger.to_state.state,
          } | tojson
        }}
