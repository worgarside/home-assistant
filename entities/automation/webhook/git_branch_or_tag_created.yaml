---
alias: /webhook/git-branch-or-tag-created

id: webhook_git_branch_or_tag_created

mode: queued

trigger:
  - platform: webhook
    webhook_id: git_branch_or_tag_created
    allowed_methods:
      - POST
    local_only: false

variables:
  img_url: '{{ trigger.json["sender"]["avatar_url"] }}'
  repository: '{{ trigger.json["repository"]["name"] }}'
  ref: '{{ trigger.json["ref"] }}'
  ref_type: '{{ trigger.json["ref_type"] }}'
  repo_url: '{{ trigger.json["repository"]["html_url"] }}'

action:
  - service: script.turn_on
    target:
      entity_id: script.debug_persistent_notification
    data:
      variables:
        notification_title: Git {{ ref_type }} created
        notification_id: "git_{{ ref_type }}_created_{{ ref }}"
        message: >-
          <img src="{{ img_url }}" width="24" height="24">
          `{{ trigger.json["sender"]["login"] }}`
          created {{ ref_type }}
          [`{{ ref }}`]({{ repo_url }}/tree/{{ ref }})
          in
          [`{{ repository }}`]({{ repo_url }})

  - choose:
      - alias: Get new release for newly published tag
        conditions: '{{ ref_type == "tag" and ref is match("^\d+\.\d+\.\d+$") }}'

        sequence:
          - service: shell_command.checkout_git_branch
            data:
              api_token: !secret api_bearer_token
              branch: main

      - alias: Update entities to record new branch
        conditions: '{{ repository == "home-assistant" and ref_type == "branch" }}'

        sequence:
          - service: homeassistant.update_entity
            target:
              entity_id: sensor.remote_git_branches
