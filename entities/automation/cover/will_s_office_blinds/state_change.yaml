---
alias: /cover/will-s-office-blinds/state-change

id: cover_will_s_office_blinds_state_change

description: Ensures both blinds stay in sync when either one is controlled

# Use single mode to prevent multiple instances running simultaneously
mode: single

max_exceeded: silent

# Trigger when either blind's position changes
trigger:
  - platform: state
    entity_id:
      - cover.will_s_office_blinds_1
      - cover.will_s_office_blinds_2
    attribute: current_position

# Define variables for the triggering and other blind
variables:
  trigger_entity: "{{ trigger.entity_id }}"
  other_entity: >-
    {% if trigger_entity == 'cover.will_s_office_blinds_1' %}
      cover.will_s_office_blinds_2
    {% else %}
      cover.will_s_office_blinds_1
    {% endif %}

condition:
  # Only run if the positions are actually different (with 2.5% tolerance)
  - condition: template
    value_template: >-
      {% set trigger_pos = state_attr(trigger_entity, 'current_position') | int(default=0) %}
      {% set other_pos = state_attr(other_entity, 'current_position') | int(default=0) %}
      {{ abs(trigger_pos - other_pos) > 2.5 }}

  # Don't run if the other blind is already moving
  - condition: template
    value_template: >-
      {{ states(other_entity) not in ['opening', 'closing'] }}

# Set the other blind to match the position of the triggering blind
action:
  - service: cover.set_cover_position
    target:
      entity_id: "{{ other_entity }}"
    data:
      position: "{{ state_attr(trigger_entity, 'current_position') }}"
