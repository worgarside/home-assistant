---
alias: /mtrxpi/content-trigger/raining-grid

id: mtrxpi_content_trigger_raining_grid

mode: queued

trigger:
  - platform: state
    entity_id: sensor.tomorrow_io_rain_intensity  # mm/hr
    to:

variables:
  rain: "{{ trigger.to_state.state | float(0) }}"

  limit: "{{ states('input_number.mtrxpi_raining_grid_maximum_rain_intensity') | float(15) }}"

  rain_chance: "{{ ( rain | float(0) * (100 / limit) ) | round(2) }}"

action:
  - alias: Set rain volume
    service: number.set_value
    target:
      entity_id: number.mtrxpi_raining_grid_rain_chance
    data:
      value: "{{ min(rain_chance, 100) }}"

  - choose:
      - alias: Queue content if it is not already running

        conditions: >-
          {{ states('sensor.mtrxpi_current_content') != 'raining-grid' and rain | float(-1) > 0 }}

        sequence:
          - service: script.mtrxpi_queue_content
            data:
              id: raining-grid
              priority: "{{ states('input_number.mtrxpi_raining_grid_queue_position') }}"

      - alias: Remove content from queue if rain is 0

        conditions: "{{ rain | float(-1) == 0 }}"

        sequence:
          - service: script.mtrxpi_queue_content
            data:
              id: raining-grid
              priority: clear
