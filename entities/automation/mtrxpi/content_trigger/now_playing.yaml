---
alias: /mtrxpi/content-trigger/now-playing

id: mtrxpi_content_trigger_now_playing

mode: restart

trigger:
  - platform: state
    entity_id: media_player.topaz_sr10

condition: >-
  {% set from_attrs = trigger.from_state.attributes %}
  {% set to_attrs = trigger.to_state.attributes %}
  {{
    trigger.from_state.state != trigger.to_state.state or
    from_attrs.get("media_title") != to_attrs.get("media_title") or
    from_attrs.get("media_album_name") != to_attrs.get("media_album_name") or
    from_attrs.get("media_artist") != to_attrs.get("media_artist") or
    from_attrs.get("entity_picture") != to_attrs.get("entity_picture")
  }}

action:
  - parallel:
      - if: "{{ states('sensor.mtrxpi_current_content') != 'now-playing' }}"
        then:
          - service: script.mtrxpi_queue_content
            data:
              id: now-playing
              priority: 10

      - service: mqtt.publish
        data:
          topic: /mtrxpi/now-playing/parameter/track-metadata
          qos: 1
          retain: true
          payload_template: >-
            {%- set url = trigger.to_state.attributes.entity_picture | default(None) -%}
            {%-
              set host = (
                states('sensor.local_ip')
                if has_value('sensor.local_ip')
                else "homeassistant.local"
              )
            -%}
            {{
              {
                "title": trigger.to_state.attributes.media_title | default(None),
                "album": trigger.to_state.attributes.media_album_name | default(None),
                "artist": trigger.to_state.attributes.media_artist | default(None),
                "artwork_uri": (
                  "http://" ~ host ~ ":8123" ~ url
                  if url is string and url.startswith("/api/")
                  else url
                )
              } | to_json
            }}
