---
alias: Log Exception

description: Log an exception, does not end the calling execution!

mode: parallel

fields:
  calling_entity:
    description: The entity that called this service
    required: true
    example: automation.do_something  # hacv disable: InvalidEntityConsumed
    selector:
      entity:

  message:
    description: The message to be logged
    required: true
    example: Something went wrong!
    selector:
      text:
        multiline: true

variables:
  entity_domain: "{{ calling_entity.split('.')[0] }}"
  entity_id: "{{ calling_entity.split('.')[1] }}"
  timestamp: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
  formatted_message: >-
    {% if '\n' not in message and '`' not in message %}
    {#- Plain text single line -#}
    {{- '`' + message + '`' -}}
    {%- elif '```' in message and message.count('```') >= 2 -%}
    {#- Code block -#}
    {{- '\n' + message -}}
    {% elif '```' in message and message.count('```') < 2 -%}
    {#- Invalid code block, wrap in triple-backticks -#}
    {{- '\n```\n' + message.replace('`', '\\`') + '\n```' -}}
    {%- elif '\n' in message -%}
    {#- Multi-line text with newlines -#}
    {{- '\n```\n' + message + '\n```' -}}
    {%- else -%}
    {#- Plain text multi-line -#}
    {{- message -}}
    {%- endif -%}

sequence:
  - service: persistent_notification.create
    data:
      title: ⚠️ Error thrown by {{ entity_domain.replace('_', ' ').title() }}
      message: |
        Source:  [`{{ calling_entity }}`](/config/{{ entity_domain }}/trace/{{ entity_id }})
        Time:    `{{ timestamp }}`
        Message: {{ formatted_message }}

  - service: system_log.write
    data:
      message: "{{ message }}"
      level: error
      logger: "{{ calling_entity }}"
