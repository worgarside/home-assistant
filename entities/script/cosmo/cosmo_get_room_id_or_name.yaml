---
alias: "Cosmo: Get Room ID or Name"

description: Get a room's ID from its name, or vice versa

mode: parallel

fields:
  lookup_value:
    description: The value to look up (area or numeric ID)
    required: true
    selector:
      text:

sequence:
  - if: "{{ is_state('sensor.cosmo_room_lookup', 'unknown') }}"
    then:
      - alias: Force-update the room lookup
        event: update_cosmo_room_lookup

      - wait_template: "{{ not is_state('sensor.cosmo_room_lookup', 'unknown') }}"
        timeout: 10

  - variables:
      result: >-
        {% set raw_lookup = states("sensor.cosmo_room_lookup") %}
        {% set key = lookup_value | string | lower | regex_replace("[^A-Za-z0-9]", "") %}
        {% if raw_lookup.startswith("{") %}
          {% set lookup = raw_lookup | from_json %}
          {% if key in lookup %}
            {{ lookup[key] }}
          {% else %}
            ERROR: {{ key | default("null") }} not found in lookup: {{ lookup | tojson(indent=2) }}
          {% endif %}
        {% else %}
          ERROR: {{ key | default("null") }} not found in lookup: {{ raw_lookup }}
        {% endif %}

  - if: >-
      {{ (result | string).startswith("ERROR") }}

    then:
      - service: script.turn_on
        target:
          entity_id: script.debug_persistent_notification
        data:
          variables:
            notification_title: Cosmo Room Lookup Error
            message: "{{ result }}"

      - stop: Cosmo Room Lookup Error
        error: true

  - variables:
      response:
        value: "{{ result }}"

  - service: script.turn_on
    target:
      entity_id: script.debug_persistent_notification
    data:
      variables:
        notification_title: Cosmo Room Lookup Success
        message: |
          ```json
          {{ response }}
          ```

  - stop: Cosmo Room Lookup Success
    response_variable: response
