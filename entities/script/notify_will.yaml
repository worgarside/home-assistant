---
alias: Notify Will

description: Send a notification to Will's phone and the HA UI

fields:
  title:
    description: The title of the notification
    example: Something Important!
    default: " "
    selector:
      text:

  message:
    description: The message body of the notification
    example: A thing has happened, thought you ought to know
    required: true
    selector:
      text:
        multiline: true

  clear_notification:
    description: Clear the persistent notification
    example: "true"
    selector:
      boolean:

  notification_id:
    description: Optional ID for the persistent notification
    example: important_thing_happened
    selector:
      text:

  actions:
    description: Optional actions for the phone notification
    example: '[{"action": "URI", "title": "View More", "uri": "https://example.com"}]'
    selector:
      object:

  mobile_notification_icon:
    description: Optional icon for the phone notification
    example: mdi:alert
    selector:
      icon:
        placeholder: mdi:bell

  url:
    description: |-
      URL to open when the notification is selected
      https://companion.home-assistant.io/docs/notifications/notifications-basic/#opening-a-url
    example: /home-will/makerspace
    required: false
    selector:
      text:

  group:
    description: Combine notifications together visually
    example: example-notification-group
    required: false
    selector:
      text:

  sticky:
    description: Whether to dismiss the notification upon selecting it or not
    required: false
    selector:
      boolean:

  persistent:
    description: >-
      Block dismissing the notification via the "Clear All" button or when the device is locked
    required: false
    selector:
      boolean:

mode: queued

max: 50

variables:
  actions: "{{ actions | default([]) }}"

  clear_notification: >-
    {{
      message | default('') == 'clear_notification' or
      clear_notification | default(False) | bool
    }}

  notification_id: >-
    {% if clear_notification %}
      {{ notification_id | default(None) }}
    {% else %}
      {{ notification_id | default('notify_will_' ~ now().strftime('%Y%m%d%H%M%S%f')) }}
    {% endif %}

  message: >-
    {% if clear_notification %}
      clear_notification
    {% else %}
      {{ message | default("") }}
    {% endif %}

  mobile_notification_icon: "{{ mobile_notification_icon | default('mdi:home-assistant') }}"

  notif_title: "{{ title | default(' ') }}"

  url: "{{ url | default('') }}"

  group: "{{ group | default('') }}"

  sticky: "{{ sticky | default(false) }}"

  persistent: "{{ persistent | default(false) }}"

sequence:
  - if: >-
      {{
        clear_notification is true and
        (
          notification_id is undefined or
          not notification_id
        )
      }}

    then:
      - stop: Invalid usage, clear_notification is true but notification_id is not set
        error: true

  - if: "{{ clear_notification }}"

    then:
      - alias: Remove HA Notification
        service: persistent_notification.dismiss
        data:
          notification_id: "{{ notification_id }}"

    else:
      - alias: HA Notification
        service: persistent_notification.create
        data:
          message: "{{ message }}"
          notification_id: "{{ notification_id }}"
          title: "{{ notif_title }}"

  - alias: Phone
    service: notify.mobile_app_will_s_pixel_6_pro
    data:
      message: "{{ message }}"
      title: "{{ notif_title }}"
      data:
        actions: "{{ actions }}"
        tag: "{{ notification_id }}"
        notification_icon: "{{ mobile_notification_icon }}"
        url: "{{ url }}"
        group: "{{ group }}"
        sticky: "{{ sticky }}"
        persistent: "{{ persistent }}"

  - alias: Personal MacBook Pro
    if:
      or:
        - alias: MBP is active
          condition: state
          entity_id: binary_sensor.wills_macbook_pro_active
          state: "on"

        - alias: Clear Notification
          condition: template
          value_template: "{{ clear_notification }}"

    then:
      - service: notify.mobile_app_wills_macbook_pro
        data:
          message: "{{ message }}"
          title: "{{ notif_title }}"
          data:
            actions: "{{ actions }}"
            tag: "{{ notification_id }}"
            group: "{{ group }}"
            url: "{{ url }}"

  # - alias: Work MacBook Pro
  #   if:
  #     or:
  #       - alias: Work MBP is active
  #         condition: state
  #         entity_id: binary_sensor.st_macbook_pro_active
  #         state: "on"

  #       - alias: Will is at the office
  #         condition: state
  #         entity_id: person.will
  #         state: SigTech

  #       - alias: Clear Notification
  #         condition: template
  #         value_template: "{{ clear_notification }}"

  #       # - and:
  #       #   - alias: It's a workday
  #       #     condition: state
  #       #     entity_id: binary_sensor.workday
  #       #     state: "on"

  #       #   - alias: Will not on A/L - TODO

  #   then:
  #     - service: notify.mobile_app_k3qfmw509d
  #       data:
  #         message: "{{ message }}"
  #         title: "{{ notif_title }}"
  #         data:
  #           actions: "{{ actions }}"
  #           tag: "{{ notification_id }}"
