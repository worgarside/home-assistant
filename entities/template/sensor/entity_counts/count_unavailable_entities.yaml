---

# Derives a list of all unavailable entities (with some exclusions, see below) for re-use and
# consumption elsewhere. Exclusions are as follows:
#   - Browser Mod entities: they're unavailable as soon as the browser is closed
#   - TP Link Kasa switch LEDS: if the switch is unavailable, don't count the LED as a separate
#       entity
#   - `sensor.hacs`: seems to be unavailable if there aren't any pending updates (possibly only on
#       restart)
#   - GitHub sensors: if there's no matching data they become unavailable

name: Count Unavailable Entities
unique_id: count_unavailable_entities
state: "{{ this.attributes.entities | list | count }}"
icon: mdi:lan-disconnect
unit_of_measurement: ""
attributes:
  # yamllint disable rule:line-length
  entities: >
    {% set unavailable_entities = namespace(entities=[]) %}

    {%
      set regex_patterns = [
        "^(light|media_player|(binary_)?sensor)\.(?=[a-z]*\d)([a-z]|\d){8}_(?=[a-z]*\d)([a-z]|\d){8}$",
        "^binary_sensor\.([a-z]|\d){8}_([a-z]|\d){8}_browser_(fullykiosk|dark_mode)$",
        "^light\.([a-z]|\d){8}_([a-z]|\d){8}_screen$",
        "^sensor\.([a-z]|\d){8}_([a-z]|\d){8}_browser_(path|visibility|user(agent)?|height|width)$",
        "^switch\..+_led$",
        "sensor\.hacs",
        "^sensor\.worgarside_.+_latest_(discussion|release|issue|pull_request|tag)$"
      ]
    %}
    {% set master_pattern = "(" ~ regex_patterns | join("|") ~ ")" %}

    {% for entity in states | selectattr('state', 'eq', 'unavailable') | list %}
      {% if not entity.entity_id is match(master_pattern, ignorecase=True) %}
        {%- set unavailable_entities.entities = unavailable_entities.entities + [entity.entity_id] -%}
      {% endif %}
    {% endfor %}

    {{ unavailable_entities.entities }}
  # yamllint enable rule:line-length
