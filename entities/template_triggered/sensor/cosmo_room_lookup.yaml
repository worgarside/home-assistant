---
trigger:
  - platform: state
    entity_id: vacuum.cosmo

  - platform: state
    entity_id: vacuum.cosmo
    attribute: rooms

  - platform: state
    entity_id: vacuum.cosmo
    attribute: selected_map

sensor:
  - name: Cosmo Room Lookup

    unique_id: cosmo_room_lookup

    icon: mdi:floor-plan

    state: >-
      {% set ns = namespace(lookup={}) %}
      {%
        set rooms = state_attr('vacuum.cosmo', 'rooms')[
            state_attr('vacuum.cosmo', 'selected_map')
        ] | selectattr('name', 'match', '^[A-Za-z0-9\\-_ ]+$')
        | list
      %}

      {% for room in rooms | list %}
        {% set room_name = room.name.casefold() | regex_replace("[^A-Za-z0-9]", "") %}

        {% if not room_name %}
          {%  continue %}
        {% endif %}

        {%
          set ns.lookup = dict(
            ns.lookup,
            **{
              room.id | string: room_name,
              room_name: room.id
            }
          )
        %}
      {% endfor %}

      {{ ns.lookup | tojson }}

    attributes:
      rooms: >-
        {{
          state_attr('vacuum.cosmo', 'rooms')[
            state_attr('vacuum.cosmo', 'selected_map')
          ]
          | selectattr('name', 'match', '^[A-Za-z0-9\\-_ ]+$')
          | list
        }}

      room_ids: >-
        {{
          state_attr('vacuum.cosmo', 'rooms')[
            state_attr('vacuum.cosmo', 'selected_map')
          ]
          | selectattr('name', 'match', '^[A-Za-z0-9\\-_ ]+$')
          | map(attribute='id')
          | list
        }}

      room_names: >-
        {{
          state_attr('vacuum.cosmo', 'rooms')[
            state_attr('vacuum.cosmo', 'selected_map')
          ]
          | selectattr('name', 'match', '^[A-Za-z0-9\\-_ ]+$')
          | map(attribute='name')
          | map('lower')
          | map('regex_replace', '[^a-z0-9]', '', ignorecase=True)
          | list
        }}
