---

# ------------------------ Critical ------------------------ #

  - alias: /switch/washing_machine/keep_turned_on
    id: keep_washing_machine_on
    mode: single
    trigger:
      - platform: state
        entity_id: switch.washing_machine
        to: "off"
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.washing_machine
      - service: script.notify_will
        data:
          title: "Critical Automation Triggered"
          # yamllint disable-line rule:line-length
          message: "`keep_washing_machine_on` was triggered with state `{{ trigger.to_state.state}}`"

  - alias: /light/galaxy_light/restart_when_offline
    id: restart_galaxy_light_when_offline
    trigger:
      - platform: state
        entity_id: binary_sensor.galaxy_light_online
        to: "off"
    action:
      - alias: "Persistent Notification #1"
        service: script.debug_persistent_notification
        data:
          title: "Restarting Galaxy Light"
          # yamllint disable-line rule:line-length
          message: "Current states are: \n ```\n binary_sensor.galaxy_light_online: {{ states('binary_sensor.galaxy_light_online') }}\n var.galaxy_light_previous_state: {{ states('var.galaxy_light_previous_state') }}\n ```"
      # This variable needs setting because the entity will likely be updated when the
      # light turns back on
      - alias: "Set variables"
        variables:
          previous_gl_state: "{{ states('var.galaxy_light_previous_state') }}"
      # Restart the Galaxy Light with a 5s delay
      - service: script.restart_galaxy_light
        data:
          switch_on_delay: 5
      # Wait for the GL to come back online, with a 10s timeout
      - wait_template: "{{ is_state('binary_sensor.galaxy_light_online', 'on') }}"
        timeout: 10
      - alias: "Restart with 30s delay if not back online"
        choose:
          - alias: "Light didn't come back online"
            conditions: "{{ not wait.completed }}"
            sequence:
              - alias: "Persistent Notification #2"
                service: script.debug_persistent_notification
                data:
                  title: "Initial GL restart failed"
                  message: "Attempting with delay of 30s"
              - alias: "Restart the GL with a 30s delay"
                service: script.restart_galaxy_light
                data:
                  switch_on_delay: 30
              - wait_template: >
                  {{ is_state('binary_sensor.galaxy_light_online', 'on') }}
                timeout: 10
      - alias: "Resume original state if the restart succeeded, else notify Will"
        choose:
          - alias: "Galaxy light is back online"
            conditions: "{{ is_state('binary_sensor.galaxy_light_online', 'on') }}"
            sequence:
              - choose:
                  - alias: "Galaxy Light was ON before it went offline"
                    conditions: "{{ previous_gl_state == 'on' }}"
                    sequence:
                      - repeat:
                          # yamllint disable-line rule:line-length
                          while: "{{ not is_state('light.galaxy_light', 'on') and repeat.index < 10 }}"
                          sequence:
                            - alias: "Persistent Notification #3"
                              service: script.debug_persistent_notification
                              data:
                                title: "Resuming previous GL state"
                                message: "Turning ON"
                            - service: light.turn_on
                              target:
                                entity_id: light.galaxy_light
                  - alias: "Galaxy Light was OFF before it went offline"
                    conditions: "{{ previous_gl_state == 'off' }}"
                    sequence:
                      - repeat:
                          # yamllint disable-line rule:line-length
                          while: "{{ not is_state('light.galaxy_light', 'off') and repeat.index < 10 }}"
                          sequence:
                            - alias: "Persistent Notification #4"
                              service: script.debug_persistent_notification
                              data:
                                title: "Resuming previous GL state"
                                message: "Turning OFF"
                            - service: light.turn_off
                              target:
                                entity_id: light.galaxy_light
                default:
                  - service: script.notify_will
                    data:
                      title: "Automation Failure"
                      # yamllint disable-line rule:line-length
                      message: "Galaxy Light restart failed: previous state was `{{ trigger.from_state.state }}` and current state is `{{ states('light.galaxy_light') }}`"
        default:
          - service: script.notify_will
            data:
              title: "Automation Failure"
              # yamllint disable-line rule:line-length
              message: "Galaxy Light restart failed: previous state was `{{ previous_gl_state }}` and current state is `{{ states('light.galaxy_light') }}`"

  - alias: /homeassistant/remote_ui/restart_when_offline
    id: restart_when_remote_ui_offline
    trigger:
      - platform: state
        entity_id: sensor.nabu_casa_online
        to: "unavailable"
        for:
          minutes: 5
    condition: "{{ states('binary_sensor.remote_ui') == 'on' }}"
    action:
      - service: script.notify_will
        data:
          title: Home Assistant Remote UI Offline
          message: RESTful sensor unavailable but remote UI binary sensor is ON
      - service: homeassistant.restart
