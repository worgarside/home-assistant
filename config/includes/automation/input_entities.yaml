---

  - alias: Initialise "Entity Force Updater" Options
    id: init_entity_force_updater_options
    trigger:
      - platform: homeassistant
        event: start
    action:
#      - delay:
#          minutes: 15
      - service: input_select.set_options
        data_template:
          options: |
            {% for domain in [
              states.binary_sensor,
              states.climate,
              states.cover,
              states.device_tracker,
              states.light,
              states.media_player,
              states.person,
              states.remote,
              states.scene,
              states.script,
              states.sensor,
              states.sun,
              states.switch,
              states.var,
              states.water_heater,
              states.weather,
            ] -%}
              {% for state in domain -%}
                - {{ state.entity_id }}
              {% endfor %}
            {%- endfor %}
        target:
          entity_id: input_select.entity_force_updater

  - alias: Force Update Entity
    id: force_update_entity
    trigger:
      - platform: state
        entity_id: input_select.entity_force_updater
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: "{{ trigger.to_state.state }}"

#<editor-fold desc="Input Boolean">

  - alias: /input_boolean/mini_crt_power
    id: input_boolean_mini_crt_power
    trigger:
      - platform: state
        entity_id: input_boolean.mini_crt_power
        for:
          seconds: 1
    action:
      - choose:
          - alias: "Turn On"
            conditions: "{{ states('input_boolean.mini_crt_power') == 'on' }}"
            sequence:
              - service: rest_command.mini_crt_turn_power_on
          - alias: "Turn Off"
            conditions: "{{ states('input_boolean.mini_crt_power') == 'off' }}"
            sequence:
              - service: rest_command.mini_crt_turn_power_off
        default:
          - service: script.notify_will
            data:
              title: "Automation Failure"
              # yamllint disable-line rule:line-length
              message: "Automation `input_boolean_mini_crt_power` failed: unknown previous state of `{{ trigger.from_state.state }}`"

  - alias: /input_boolean/mini_crt_power/force_update
    id: force_update_input_boolean_mini_crt_power
    trigger:
      - platform: state
        entity_id: media_player.hifi_system
        to:
    action:
      - service: homeassistant.update_entity
        entity_id: sensor.mini_crt_power_state

  - alias: /input_boolean/mini_crt_fan
    id: input_boolean_mini_crt_fan
    trigger:
      - platform: state
        entity_id: input_boolean.mini_crt_fan
    action:
      - service: mqtt.publish
        data:
          topic: /crt-pi/fan/state
          payload_template: "{{ states('input_boolean.mini_crt_fan')}}"

#</editor-fold>
#<editor-fold desc="Input Number">
  - alias: /input_number/monstera_dry_point/auto_set
    id: input_number_monstera_dry_point_auto_set
    trigger:
      - platform: numeric_state
        entity_id: sensor.monstera_moisture
        above: input_number.monstera_dry_point
        for:
          minutes: 5
    action:
      - alias: "Set variables"
        variables:
          previous_value: "{{ states('input_number.monstera_dry_point') }}"
      - service: input_number.set_value
        target:
          entity_id: input_number.monstera_dry_point
        data:
          value: "{{ ( states('sensor.monstera_moisture') | float * 1.1 ) | round(2) }}"
      - service: script.debug_persistent_notification
        data:
          title: "Setting Monstera Dry Point"
          # yamllint disable-line rule:line-length
          message: "Changed from {{ previous_value }} to {{ states('input_number.monstera_dry_point') }}"

  - alias: /input_number/monstera_dry_point/publish_update
    id: input_number_monstera_dry_point_publish_update
    trigger:
      - platform: state
        entity_id: input_number.monstera_dry_point
    action:
      - service: mqtt.publish
        data:
          topic: /plant_monitor/monstera/dry_point/set
          payload_template: '{{ trigger.to_state.state | float }}'

  - alias: /input_number/monstera_wet_point/auto_set
    id: input_number_monstera_wet_point_auto_set
    trigger:
      - platform: numeric_state
        entity_id: sensor.monstera_moisture
        below: input_number.monstera_wet_point
        for:
          minutes: 5
    action:
      - alias: Set variables
        variables:
          previous_value: "{{ states('input_number.monstera_wet_point') }}"
      - service: input_number.set_value
        target:
          entity_id: input_number.monstera_wet_point
        data:
          value: "{{ ( states('sensor.monstera_moisture') | float * 0.9 ) | round(2) }}"
      - service: script.debug_persistent_notification
        data:
          title: Setting Monstera Wet Point
          # yamllint disable-line rule:line-length
          message: Changed from {{ previous_value }} to {{ states('input_number.monstera_wet_point') }}

  - alias: /input_number/monstera_wet_point/publish_update
    id: input_number_monstera_wet_point_publish_update
    trigger:
      - platform: state
        entity_id: input_number.monstera_wet_point
    action:
      - service: mqtt.publish
        data:
          topic: /plant_monitor/monstera/wet_point/set
          payload_template: '{{ trigger.to_state.state | float }}'

  - alias: /input_number/ficus_dry_point/auto_set
    id: input_number_ficus_dry_point_auto_set
    trigger:
      - platform: numeric_state
        entity_id: sensor.ficus_moisture
        above: input_number.ficus_dry_point
        for:
          minutes: 5
    action:
      - alias: Set variables
        variables:
          previous_value: "{{ states('input_number.ficus_dry_point') }}"
      - service: input_number.set_value
        target:
          entity_id: input_number.ficus_dry_point
        data:
          # yamllint disable-line rule:line-length
          value: "{{ ( states('sensor.ficus_moisture') | float * 1.1 ) | round(2) }}"
      - service: script.debug_persistent_notification
        data:
          title: Setting Ficus Dry Point
          # yamllint disable-line rule:line-length
          message: Changed from {{ previous_value }} to {{ states('input_number.ficus_dry_point') }}

  - alias: /input_number/ficus_dry_point/publish_update
    id: input_number_ficus_dry_point_publish_update
    trigger:
      - platform: state
        entity_id: input_number.ficus_dry_point
    action:
      - service: mqtt.publish
        data:
          topic: /plant_monitor/ficus/dry_point/set
          payload_template: '{{ trigger.to_state.state | float }}'

  - alias: /input_number/ficus_wet_point/auto_set
    id: input_number_ficus_wet_point_auto_set
    trigger:
      - platform: numeric_state
        entity_id: sensor.ficus_moisture
        below: input_number.ficus_wet_point
        for:
          minutes: 5
    action:
      - alias: Set variables
        variables:
          previous_value: "{{ states('input_number.ficus_wet_point') }}"
      - service: input_number.set_value
        target:
          entity_id: input_number.ficus_wet_point
        data:
          # yamllint disable-line rule:line-length
          value: "{{ ( states('sensor.ficus_moisture') | float * 0.9 ) | round(2) }}"
      - service: script.debug_persistent_notification
        data:
          title: Setting Ficus Wet Point
          # yamllint disable-line rule:line-length
          message: Changed from {{ previous_value }} to {{ states('input_number.ficus_wet_point') }}

  - alias: /input_number/ficus_wet_point/publish_update
    id: input_number_ficus_wet_point_publish_update
    trigger:
      - platform: state
        entity_id: input_number.ficus_wet_point
    action:
      - service: mqtt.publish
        data:
          topic: /plant_monitor/ficus/wet_point/set
          payload_template: '{{ trigger.to_state.state | float }}'

  - alias: /input_number/yukka_dry_point/auto_set
    id: input_number_yukka_dry_point_auto_set
    trigger:
      - platform: numeric_state
        entity_id: sensor.yukka_moisture
        above: input_number.yukka_dry_point
        for:
          minutes: 5
    action:
      - alias: Set variables
        variables:
          previous_value: "{{ states('input_number.yukka_dry_point') }}"
      - service: input_number.set_value
        target:
          entity_id: input_number.yukka_dry_point
        data:
          value: "{{ ( states('sensor.yukka_moisture') | float * 1.1 ) | round(2) }}"
      - service: script.debug_persistent_notification
        data:
          title: Setting Yukka Dry Point
          # yamllint disable-line rule:line-length
          message: Changed from {{ previous_value }} to {{ states('input_number.yukka_dry_point') }}

  - alias: /input_number/yukka_dry_point/publish_update
    id: input_number_yukka_dry_point_publish_update
    trigger:
      - platform: state
        entity_id: input_number.yukka_dry_point
    action:
      - service: mqtt.publish
        data:
          topic: /plant_monitor/yukka/dry_point/set
          payload_template: '{{ trigger.to_state.state | float }}'

  - alias: /input_number/yukka_wet_point/auto_set
    id: input_number_yukka_wet_point_auto_set
    trigger:
      - platform: numeric_state
        entity_id: sensor.yukka_moisture
        below: input_number.yukka_wet_point
        for:
          minutes: 5
    action:
      - alias: Set variables
        variables:
          previous_value: "{{ states('input_number.yukka_wet_point') }}"
      - service: input_number.set_value
        target:
          entity_id: input_number.yukka_wet_point
        data:
          value: "{{ ( states('sensor.yukka_moisture') | float * 0.9 ) | round(2) }}"
      - service: script.debug_persistent_notification
        data:
          title: Setting Yukka Wet Point
          # yamllint disable-line rule:line-length
          message: Changed from {{ previous_value }} to {{ states('input_number.yukka_wet_point') }}

  - alias: /input_number/yukka_wet_point/publish_update
    id: input_number_yukka_wet_point_publish_update
    trigger:
      - platform: state
        entity_id: input_number.yukka_wet_point
    action:
      - service: mqtt.publish
        data:
          topic: /plant_monitor/yukka/wet_point/set
          payload_template: '{{ trigger.to_state.state | float }}'

#</editor-fold>
#<editor-fold desc="Input Select">

  - alias: /input_select/washing_machine_current_user/set
    id: set_washing_machine_current_user
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "MATT_USING_WASHING_MACHINE"
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "TOM_USING_WASHING_MACHINE"
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "WILL_USING_WASHING_MACHINE"
    condition: "{{ states('binary_sensor.washing_machine') == 'on' }}"
    action:
      - alias: "Set variables"
        variables:
          trigger_action: "{{ trigger.event.data.action }}"
      - choose:
          - alias: "Matt"
            conditions: "{{ trigger_action == 'MATT_USING_WASHING_MACHINE' }}"
            sequence:
              - service: input_select.select_option
                target:
                  entity_id: input_select.washing_machine_current_user
                data:
                  option: "Matt"
          - alias: "Tom"
            conditions: "{{ trigger_action == 'TOM_USING_WASHING_MACHINE' }}"
            sequence:
              - service: input_select.select_option
                target:
                  entity_id: input_select.washing_machine_current_user
                data:
                  option: "Tom"
          - alias: "Will"
            conditions: "{{ trigger_action == 'WILL_USING_WASHING_MACHINE' }}"
            sequence:
              - service: input_select.select_option
                target:
                  entity_id: input_select.washing_machine_current_user
                data:
                  option: "Will"

#</editor-fold>
