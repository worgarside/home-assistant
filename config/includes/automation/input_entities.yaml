---

  - alias: Initialise "Entity Force Updater" Options
    id: init_entity_force_updater_options
    trigger:
      - platform: homeassistant
        event: start
    action:
#      - delay:
#          minutes: 15
      - service: input_select.set_options
        data_template:
          options: |
            {% for domain in [ 
              states.binary_sensor,
              states.climate,
              states.cover,
              states.device_tracker,
              states.light,
              states.media_player,
              states.person,
              states.remote,
              states.scene,
              states.script,
              states.sensor,
              states.sun,
              states.switch,
              states.var,
              states.water_heater,
              states.weather,
            ] -%}
              {% for state in domain -%}
                - {{ state.entity_id }}
              {% endfor %}
            {%- endfor %}
        target:
          entity_id: input_select.entity_force_updater

  - alias: Force Update Entity
    id: force_update_entity
    trigger:
      - platform: state
        entity_id: input_select.entity_force_updater
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: "{{ trigger.to_state.state }}"

#<editor-fold desc="Input Boolean">

  - alias: /input_boolean/mini_crt_power
    id: input_boolean_mini_crt_power
    trigger:
      - platform: state
        entity_id: input_boolean.mini_crt_power
        for:
          seconds: 1
    action:
      - choose:
          - alias: "Turn On"
            conditions: "{{ states('input_boolean.mini_crt_power') == 'on' }}"
            sequence:
              - service: rest_command.mini_crt_turn_power_on
          - alias: "Turn Off"
            conditions: "{{ states('input_boolean.mini_crt_power') == 'off' }}"
            sequence:
              - service: rest_command.mini_crt_turn_power_off
        default:
          - service: script.notify_will
            data:
              title: "Automation Failure"
              # yamllint disable-line rule:line-length
              message: "Automation `input_boolean_mini_crt_power` failed: unknown previous state of `{{ trigger.from_state.state }}`"

  - alias: /input_boolean/mini_crt_nanoleaf_updater
    id: input_boolean_mini_crt_nanoleaf_updater
    trigger:
      - platform: state
        entity_id: input_boolean.mini_crt_nanoleaf_updater
        for:
          seconds: 1
    action:
      - choose:
          - alias: "Turn On"
            conditions: >
              {{ states('input_boolean.mini_crt_nanoleaf_updater') == 'on' }}
            sequence:
              - service: rest_command.mini_crt_turn_nanoleaf_updater_on
          - alias: "Turn Off"
            conditions: >
              {{ states('input_boolean.mini_crt_nanoleaf_updater') == 'off' }}
            sequence:
              - service: rest_command.mini_crt_turn_nanoleaf_updater_off
        default:
          - service: script.notify_will
            data:
              title: "Automation Failure"
              # yamllint disable-line rule:line-length
              message: "Automation `input_boolean_mini_crt_nanoleaf_updater` failed: unknown previous state of `{{ trigger.from_state.state }}`"

  - alias: /input_boolean/mini_crt_power/force_update
    id: force_update_input_boolean_mini_crt_power
    trigger:
      - platform: state
        entity_id: media_player.hifi_system
        to:
    action:
      - service: homeassistant.update_entity
        entity_id: sensor.mini_crt_power_state

#</editor-fold>
#<editor-fold desc="Input Select">

  - alias: /input_select/washing_machine_current_user/set
    id: set_washing_machine_current_user
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "MATT_USING_WASHING_MACHINE"
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "TOM_USING_WASHING_MACHINE"
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "WILL_USING_WASHING_MACHINE"
    condition: "{{ states('binary_sensor.washing_machine') == 'on' }}"
    action:
      - alias: "Set variables"
        variables:
          trigger_action: "{{ trigger.event.data.action }}"
      - choose:
          - alias: "Matt"
            conditions: "{{ trigger_action == 'MATT_USING_WASHING_MACHINE' }}"
            sequence:
              - service: input_select.select_option
                target:
                  entity_id: input_select.washing_machine_current_user
                data:
                  option: "Matt"
          - alias: "Tom"
            conditions: "{{ trigger_action == 'TOM_USING_WASHING_MACHINE' }}"
            sequence:
              - service: input_select.select_option
                target:
                  entity_id: input_select.washing_machine_current_user
                data:
                  option: "Tom"
          - alias: "Will"
            conditions: "{{ trigger_action == 'WILL_USING_WASHING_MACHINE' }}"
            sequence:
              - service: input_select.select_option
                target:
                  entity_id: input_select.washing_machine_current_user
                data:
                  option: "Will"

#</editor-fold>
