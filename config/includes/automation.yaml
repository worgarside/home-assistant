---

# ------------------------ Internal Services ------------------------ #

  # Custom automation for automatically reloading Pyscript when the files are updated -
  #  no longer needed but kept here for reference
  - alias: Pyscript Auto-Reload
    trigger:
      platform: event
      event_type: folder_watcher
      event_data:
        event_type: modified
    condition: "{{ trigger.event.data.folder == '/config/pyscript' }}"
    action:
      - service: pyscript.reload
      - service: persistent_notification.create
        data:
          title: Pyscript has been reloaded
          message: >
            Triggered by `{{ trigger.event.data.folder }}/{{ trigger.event.data.file}}`

# ------------------------ Will's Room Curtain ------------------------ #

  # When a change is detected by the sensor (from any source), set the input_number
  # value to change the slider on the front end
  - alias: Set Will's Room Curtain Position Slider
    trigger:
      platform: state
      entity_id: sensor.will_s_room_curtain_position
    condition:
      condition: template
      value_template: >
        {{ 
          ( trigger.from_state.state | int - trigger.to_state.state | int ) | abs > 0 
        }}
    action:
      - service: input_number.set_value
        target:
          entity_id: input_number.wills_room_curtain_position
        data:
          value: '{{ trigger.to_state.state | int }}'

  # When the slider (input number value) is changed, update the curtain position
  - alias: Will's Room Curtain Position Slider Moved
    mode: single
    max_exceeded: silent
    trigger:
      platform: state
      entity_id: input_number.wills_room_curtain_position
    action:
      - service: pyscript.set_curtain_position
        data:
          position: '{{ trigger.to_state.state | int }}'
      - delay: 5

# ------------------------ Hue Remotes ------------------------ #

  # --- --- --- --- --- Will's Room --- --- --- --- --- #

  # Will's Room Remote Button 1 Short Press - Turn Will's Room on
  - alias: Will's Room Remote Button 1 Short Press
    mode: single
    max_exceeded: silent
    trigger:
      - device_id: aa96a5e6e87f4076da2f1501c53e02c8
        domain: hue
        platform: device
        type: short_release
        subtype: 1
    action:
      - service: light.turn_on
        target:
          area_id: will_s_room

  # Will's Room Remote Button 2 Short Press - Brighten Will's Room by 25
  - alias: Will's Room Remote Button 2 Short Press
    mode: queued
    trigger:
      - device_id: aa96a5e6e87f4076da2f1501c53e02c8
        domain: hue
        platform: device
        type: short_release
        subtype: 2
    condition:
      condition: state
      state: "on"
      entity_id:
        - light.wills_shapes
    action:
      - service: light.turn_on
        entity_id: light.wills_shapes
        data_template:
          brightness: '{{states.light.wills_shapes.attributes.brightness + 25}}'

  # Will's Room Remote Button 2 Held Down - Brighten Will's Room by 50 (repeated)
  - alias: Will's Room Remote Button 2 Held Down
    mode: single
    max_exceeded: silent
    trigger:
      - device_id: aa96a5e6e87f4076da2f1501c53e02c8
        domain: hue
        platform: device
        type: repeat
        subtype: 2
    condition:
      condition: state
      state: "on"
      entity_id:
        - light.wills_shapes
    action:
      - service: light.turn_on
        entity_id: light.wills_shapes
        data_template:
          brightness: '{{states.light.wills_shapes.attributes.brightness + 50}}'

  # Will's Room Remote Button 3 Short Press - Dim Will's Room by 25
  - alias: Will's Room Remote Button 3 Short Press
    mode: queued
    trigger:
      - device_id: aa96a5e6e87f4076da2f1501c53e02c8
        domain: hue
        platform: device
        type: short_release
        subtype: 3
    condition:
      condition: state
      state: "on"
      entity_id:
        - light.wills_shapes
    action:
      - service: light.turn_on
        entity_id: light.wills_shapes
        data_template:
          brightness: '{{states.light.wills_shapes.attributes.brightness - 25}}'

  # Will's Room Remote Button 3 Held Down - Dim Will's Room by 50 (repeated)
  - alias: Will's Room Remote Button 3 Held Down
    mode: single
    max_exceeded: silent
    trigger:
      - device_id: aa96a5e6e87f4076da2f1501c53e02c8
        domain: hue
        platform: device
        type: repeat
        subtype: 3
    condition:
      condition: state
      state: "on"
      entity_id:
        - light.wills_shapes
    action:
      - service: light.turn_on
        entity_id: light.wills_shapes
        data_template:
          brightness: '{{states.light.wills_shapes.attributes.brightness - 50}}'

  # Will's Room Remote Button 4 Short Press - Turn Will's Room off
  - alias: Will's Room Remote Button 4 Short Press
    mode: single
    max_exceeded: silent
    trigger:
      - device_id: aa96a5e6e87f4076da2f1501c53e02c8
        domain: hue
        platform: device
        type: short_release
        subtype: 4
    action:
      - service: light.turn_off
        target:
          area_id: will_s_room

  # --- --- --- --- --- Kitchen --- --- --- --- --- #

  # Kitchen Remote Button 1 Long Press - Turn on all the Kitchen lights
  - alias: Kitchen Remote Button 1 Long Press
    mode: single
    max_exceeded: silent
    trigger:
      - device_id: c4b6cf2f6bd194eefe26f2a22e545b7a
        domain: hue
        platform: device
        type: long_release
        subtype: 1
      - device_id: c4b6cf2f6bd194eefe26f2a22e545b7a
        domain: hue
        platform: device
        type: repeat
        subtype: 1
    action:
      - service: light.turn_on
        target:
          area_id: kitchen

  # Kitchen Remote Button 2 Short Press
  - alias: Kitchen Remote Button 2 Short Press
    mode: queued
    trigger:
      - device_id: c4b6cf2f6bd194eefe26f2a22e545b7a
        domain: hue
        platform: device
        type: short_release
        subtype: 2
    condition:
      condition: state
      state: "on"
      entity_id:
        - light.kitchen_work_light
    action:
      - service: light.turn_on
        entity_id: light.kitchen_work_light
        data_template:
          brightness: '{{states.light.kitchen_work_light.attributes.brightness + 25}}'

  # Kitchen Remote Button 2 Held Down
  - alias: Kitchen Remote Button 2 Held Down
    mode: single
    max_exceeded: silent
    trigger:
      - device_id: c4b6cf2f6bd194eefe26f2a22e545b7a
        domain: hue
        platform: device
        type: repeat
        subtype: 2
    condition:
      condition: state
      state: "on"
      entity_id: light.kitchen_work_light
    action:
      - service: light.turn_on
        entity_id: light.kitchen_work_light
        data_template:
          brightness: '{{states.light.kitchen_work_light.attributes.brightness + 50}}'

  # Kitchen Remote Button 3 Short Press
  - alias: Kitchen Remote Button 3 Short Press
    mode: queued
    trigger:
      - device_id: c4b6cf2f6bd194eefe26f2a22e545b7a
        domain: hue
        platform: device
        type: short_release
        subtype: 3
    condition:
      condition: state
      state: "on"
      entity_id: light.kitchen_work_light
    action:
      - service: light.turn_on
        entity_id: light.kitchen_work_light
        data_template:
          brightness: '{{states.light.kitchen_work_light.attributes.brightness + 25}}'

  # Kitchen Remote Button 3 Held Down
  - alias: Kitchen Remote Button 3 Held Down
    mode: single
    max_exceeded: silent
    trigger:
      - device_id: c4b6cf2f6bd194eefe26f2a22e545b7a
        domain: hue
        platform: device
        type: repeat
        subtype: 3
    condition:
      condition: state
      state: "on"
      entity_id: light.kitchen_work_light
    action:
      - service: light.turn_on
        entity_id: light.kitchen_work_light
        data_template:
          brightness: '{{states.light.kitchen_work_light.attributes.brightness + 50}}'

  # Kitchen Remote Button 4 Short Press
  - alias: Kitchen Remote Button 4 Short Press
    mode: single
    max_exceeded: silent
    trigger:
      - device_id: c4b6cf2f6bd194eefe26f2a22e545b7a
        domain: hue
        platform: device
        type: short_release
        subtype: 4
      - device_id: c4b6cf2f6bd194eefe26f2a22e545b7a
        domain: hue
        platform: device
        type: long_release
        subtype: 4
      - device_id: c4b6cf2f6bd194eefe26f2a22e545b7a
        domain: hue
        platform: device
        type: initial_press
        subtype: 4
    action:
      - service: light.turn_off
        target:
          area_id: kitchen

  # --- --- --- --- --- Lounge --- --- --- --- --- #

  # Lounge Remote Button 1 Short Press
  - alias: Lounge Remote Button 1 Short Press
    mode: single
    max_exceeded: silent
    trigger:
      - device_id: 6e2fd8c60e6ff2ffcb8f60627281f767
        domain: hue
        platform: device
        type: short_release
        subtype: 1
    action:
      - service: light.turn_on
        target:
          area_id: lounge

  # Lounge Remote Button 2 Short Press
  - alias: Lounge Remote Button 2 Short Press
    mode: queued
    trigger:
      - device_id: 6e2fd8c60e6ff2ffcb8f60627281f767
        domain: hue
        platform: device
        type: short_release
        subtype: 2
    condition:
      - condition: or
        conditions:
          - condition: state
            state: "on"
            entity_id:
              - light.the_snail
          - condition: state
            state: "on"
            entity_id:
              - light.galaxy_light
    action:
      - service: light.turn_on
        entity_id: light.the_snail
        data_template:
          brightness: '{{states.light.the_snail.attributes.brightness + 25}}'
      - service: light.turn_on
        entity_id: light.galaxy_light
        data_template:
          brightness: '{{states.light.galaxy_light.attributes.brightness + 25}}'

  # Lounge Remote Button 2 Held Down
  - alias: Lounge Remote Button 2 Held Down
    mode: queued
    trigger:
      - device_id: 6e2fd8c60e6ff2ffcb8f60627281f767
        domain: hue
        platform: device
        type: repeat
        subtype: 2
    condition:
      - condition: or
        conditions:
          - condition: state
            state: "on"
            entity_id:
              - light.the_snail
          - condition: state
            state: "on"
            entity_id:
              - light.galaxy_light
    action:
      - service: light.turn_on
        entity_id: light.the_snail
        data_template:
          brightness: '{{states.light.the_snail.attributes.brightness + 50}}'
      - service: light.turn_on
        entity_id: light.galaxy_light
        data_template:
          brightness: '{{states.light.galaxy_light.attributes.brightness + 50}}'

  # Lounge Remote Button 3 Short Press
  - alias: Lounge Remote Button 3 Short Press
    mode: queued
    trigger:
      - device_id: 6e2fd8c60e6ff2ffcb8f60627281f767
        domain: hue
        platform: device
        type: short_release
        subtype: 3
    condition:
      - condition: or
        conditions:
          - condition: state
            state: "on"
            entity_id:
              - light.the_snail
          - condition: state
            state: "on"
            entity_id:
              - light.galaxy_light
    action:
      - service: light.turn_on
        entity_id: light.the_snail
        data_template:
          brightness: '{{states.light.the_snail.attributes.brightness - 25}}'
      - service: light.turn_on
        entity_id: light.galaxy_light
        data_template:
          brightness: '{{states.light.galaxy_light.attributes.brightness - 25}}'

  # Lounge Remote Button 3 Held Down
  - alias: Lounge Remote Button 3 Held Down
    mode: queued
    trigger:
      - device_id: 6e2fd8c60e6ff2ffcb8f60627281f767
        domain: hue
        platform: device
        type: repeat
        subtype: 3
    condition:
      - condition: or
        conditions:
          - condition: state
            state: "on"
            entity_id:
              - light.the_snail
          - condition: state
            state: "on"
            entity_id:
              - light.galaxy_light
    action:
      - service: light.turn_on
        entity_id: light.the_snail
        data_template:
          brightness: '{{states.light.the_snail.attributes.brightness - 50}}'
      - service: light.turn_on
        entity_id: light.galaxy_light
        data_template:
          brightness: '{{states.light.galaxy_light.attributes.brightness - 50}}'

  # Lounge Remote Button 4 Short Press
  - alias: Lounge Remote Button 4 Short Press
    mode: single
    max_exceeded: silent
    trigger:
      - device_id: 6e2fd8c60e6ff2ffcb8f60627281f767
        domain: hue
        platform: device
        type: short_release
        subtype: 4
    action:
      - service: light.turn_off
        target:
          area_id: lounge

# ------------------------ Sun ------------------------ #

  # Open the curtain when the Sun rises past -6'
  - alias: Open Curtain Pre-Sunrise
    id: open_curtain_pre_sunrise
    trigger:
      platform: numeric_state
      entity_id: sensor.sun_elevation
      above: -6
    action:
      - service: pyscript.open_curtain

  - alias: Sunset
    id: sun_below_horizon
    trigger:
      platform: numeric_state
      entity_id: sensor.sun_elevation
      below: "0"
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.terrace_lights

  # Open the curtain when the Sun sets past -18'
  - alias: Close Curtain Post-Sunset
    id: close_curtain_post_sunset
    trigger:
      platform: numeric_state
      entity_id: sensor.sun_elevation
      below: -18
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: person.will
                state: "home"
            sequence:
              - delay: 3600
      - wait_template: "{{ is_state('binary_sensor.wills_balcony_door', 'off') }}"
        timeout: 3600
        continue_on_timeout: false
      - service: pyscript.close_curtain

# ------------------------ Scheduled ------------------------ #

  - alias: Spotify Monthly Playlists
    id: spotify_monthlies
    mode: single
    trigger:
      - platform: time_pattern
        minutes: "/15"
    action:
      - service: pyscript.update_spotify_monthlies

  - alias: Midnight Terrace Lights Off
    id: midnight_terrace_lights_off
    trigger:
      - platform: time
        at: "00:00:00"
    action:
      - wait_template: "{{ is_state('binary_sensor.wills_balcony_door', 'off') }}"
        timeout: 900
      - service: switch.turn_off
        target:
          entity_id: switch.terrace_lights

# ------------------------ Critical ------------------------ #

  - alias: Keep Washing Machine Turned On
    id: keep_washing_machine_on
    mode: single
    trigger:
      - platform: state
        entity_id: switch.washing_machine
        to: "off"
    action:
      - service: switch.turn_on
        target:
          entity_id: switch.washing_machine
      - service: script.notify_will
        data:
          title: "Critical Automation Triggered"
          # yamllint disable-line rule:line-length
          message: "`keep_washing_machine_on` was triggered with state `{{ trigger.to_state.state}}`"

  - alias: Restart Galaxy Light
    id: restart_galaxy_light_when_offline
    trigger:
      - platform: state
        entity_id: binary_sensor.galaxy_light_online
        to: "off"
    action:
      # Restart the Galaxy Light with a 5s delay
      - service: script.restart_galaxy_light
        data:
          switch_on_delay: 5
      # Wait for the GL to come back online, with a 10s timeout
      - wait_template: "{{ is_state('binary_sensor.galaxy_light_online', 'on') }}"
        timeout: 10
      - alias: "Restart with 30s delay if not back online"
        choose:
          - alias: "Light didn't come back online"
            conditions: "{{ not wait.completed }}"
            sequence:
              - alias: "Restart the GL with a 30s delay"
                service: script.restart_galaxy_light
                data:
                  switch_on_delay: 30
              - wait_template: >
                  {{ is_state('binary_sensor.galaxy_light_online', 'on') }}
                timeout: 10
      - alias: "Resume original state if the restart succeeded, else notify Will"
        choose:
          - alias: "Galaxy light is back online"
            conditions: "{{ is_state('binary_sensor.galaxy_light_online', 'on') }}"
            sequence:
              - choose:
                  - alias: "Galaxy Light was ON before it went offline"
                    conditions: >
                      {{ states('input_text.galaxy_light_previous_state') == 'on' }}
                    sequence:
                      - service: switch.turn_on
                        target:
                          entity_id: light.galaxy_light
                  - alias: "Galaxy Light was OFF before it went offline"
                    conditions: >
                      {{ states('input_text.galaxy_light_previous_state') == 'off' }}
                    sequence:
                      - service: switch.turn_off
                        target:
                          entity_id: light.galaxy_light
                default:
                  - service: script.notify_will
                    data:
                      title: "Automation Failure"
                      # yamllint disable-line rule:line-length
                      message: "Galaxy Light restart failed: previous state was `{{ trigger.from_state.state\
                        \ }}` and current state is `{{ states('light.galaxy_light') }}`"
        default:
          - service: script.notify_will
            data:
              title: "Automation Failure"
              # yamllint disable-line rule:line-length
              message: "Galaxy Light restart failed: previous state was `{{ states('input_text.galaxy_light_previous_state')\
                \ }}` and current state is `{{ states('light.galaxy_light') }}`"

# ------------------------ Input Text/Select ------------------------ #

  - alias: Preserve Galaxy Light Previous State
    id: preserve_galaxy_light_previous_state
    trigger:
      - platform: state
        entity_id: light.galaxy_light
    condition: "{{ trigger.from_state.state != 'unavailable' }}"
    action:
      - service: input_text.set_value
        data:
          entity_id: input_text.galaxy_light_previous_state
          value: "{{ trigger.from_state.state }}"

  - alias: Initialise "Entity Force Updater" Options
    id: init_entity_force_updater_options
    trigger:
      - platform: homeassistant
        event: start
    action:
#      - delay:
#          minutes: 15
      - service: input_select.set_options
        target:
          entity_id: input_select.entity_force_updater
        data_template:
          options: |
            {% for domain in [ 
              states.binary_sensor,
              states.climate,
              states.cover,
              states.device_tracker,
              states.light,
              states.media_player,
              states.person,
              states.remote,
              states.scene,
              states.script,
              states.sensor,
              states.sun,
              states.switch,
              states.var,
              states.water_heater,
              states.weather,
            ] -%}
              {% for state in domain -%}
                - {{ state.entity_id }}
              {% endfor %}
            {%- endfor %}

  - alias: Force Update Entity
    id: force_update_entity
    trigger:
      - platform: state
        entity_id: input_select.entity_force_updater
    action:
      - service: homeassistant.update_entity
        target:
          entity_id: "{{ trigger.to_state.state }}"
