---
notify_will:
  description: "Send a notification to Will's phone and the HA UI"
  fields:
    title:
      description: "The title of the notification"
      example: "Something Important!"
    message:
      description: "The message body of the notification"
      example: "A thing has happened, though you ought to know"
  sequence:
    - service: persistent_notification.create
      data:
        title: "{{ title }}"
        message: "{{ message }}"
    - service: notify.mobile_app_will_s_pixel_4_xl
      data:
        title: "{{ title }}"
        message: "{{ message }}"

restart_galaxy_light:
  description: "Restart the Galaxy Light when it goes offline"
  fields:
    switch_on_delay:
      description: "The number of seconds to wait before switching the plug back on"
      example: 5
  sequence:
    - service: switch.turn_off
      target:
        entity_id: switch.galaxy_light_plug
    - delay: "{{ switch_on_delay }}"
    - service: switch.turn_on
      target:
        entity_id: switch.galaxy_light_plug
    - delay: 5
    - service: homeassistant.update_entity
      target:
        entity_id: binary_sensor.galaxy_light_online

start_spotify_on_device:
  description: "Start Spotify playback on a particular device"
  fields:
    device:
      description: "The device to start playback on"
      example: "media_player.hifi_system"
    user_name:
      description: "The name of the user, to determine which Spotify account to use"
      example: "Dave"
  sequence:
#    - service: persistent_notification.create
#      data:
#        title: Spotcast Arguments
#        message: |
#          device_key: {{ device_key }}
#          device_value: {{ device_value }}
#          user_name: {{ user_name | lower }}
    - service: spotcast.start
      data:
        '{{device_key}}': '{{ device_value }}'
        account: '{{ user_name | lower }}'
        shuffle: true
        force_playback: true
